# 
# Copyright (c) 2013.
# University of Primorska, Andrej Marušič Institute. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met: 
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer. 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution. 
# 
# Project eOskrba (http://eOskrba.si) was financed by Slovenian Research
# Agency and Ministry of Health of Republic of Slovenia.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
#TOLE DATOTEKO SE KOPIRA NA TOMCAT V DIREKTORIJ webapps/activiti-rest/WEB-INF/classes
#set the level of the root logger to DEBUG and set its appender
#as an appender named testAppender
log4j.rootLogger = INFO, eoskrba, JDBC2
#define a named logger
#log4j.logger.dataAccessLogger = com.apress.logging.logger
#set the appender named testAppender to be a console appender
log4j.appender.eoskrba=org.apache.log4j.DailyRollingFileAppender
log4j.appender.eoskrba.additivity=true
#set the layout for the appender eoskrba
log4j.appender.eoskrba.file=${catalina.home}/logs/eoskrba.log
#vsako uro dobimo log datoteko
log4j.appender.eoskrba.datePattern='.'yyyy-MM-dd-HH
log4j.appender.eoskrba.append=true
log4j.appender.eoskrba.layout=org.apache.log4j.PatternLayout
#log4j.appender.eoskrba.layout=org.apache.log4j.xml.XMLLayout
log4j.appender.eoskrba.layout.LocationInfo=true
log4j.appender.eoskrba.layout.conversionPattern=%utcdate{yyyy-MM-dd HH:mm:ss.fff} %d***[%t]***%X{user}***%X{task}***%X{taskContent}***%X{taskType}***%F***%M***%L***%r***%-5p***%c***%x***%m\n

# JDBC appender directly, 2b)
log4j.appender.JDBC2=org.apache.log4j.jdbcplus.JDBCAppender
log4j.appender.JDBC2.url=jdbc:postgresql://88.200.63.187:5432/monitoring
log4j.appender.JDBC2.dbclass=org.firebirdsql.jdbc.FBDriver
log4j.appender.JDBC2.username=monitor
log4j.appender.JDBC2.password=monitor
#log4j.appender.JDBC2.sql=INSERT INTO LOG_LOG4J2 (MSG) VALUES ('@MSG@')
#next: example for most functions/log types
log4j.appender.JDBC2.sql=INSERT INTO LOGTEST (id, prio, iprio, cat, thread, msg, layout_msg, throwable, ndc, mdc, mdc2, info, addon, the_date, the_time, the_timestamp, created_by) VALUES (@INC@, '@PRIO@', @IPRIO@, '@CAT@', '@THREAD@', '@MSG@', '@LAYOUT:1@', '@THROWABLE@', '@NDC@', '@MDC:MyMDC@', '@MDC:MyMDC2@', 'info timestamp: @TIMESTAMP@', '@LAYOUT@', cast ('@LAYOUT:3@' as date), cast ('@LAYOUT:4@' as time), cast ('@LAYOUT:3@ @LAYOUT:4@' as timestamp), 'me')
log4j.appender.JDBC2.layout=org.apache.log4j.PatternLayout
log4j.appender.JDBC2.layout.LocationInfo=true
# conversion pattern with 4 parts separated by #, second is empty
log4j.appender.JDBC2.layout.ConversionPattern=%utcdate{yyyy-MM-dd HH:mm:ss.fff} %d***[%t]***%X{user}***%X{task}***%X{taskContent}***%X{taskType}***%F***%M***%L***%r***%-5p***%c***%x***%m\n
log4j.appender.JDBC2.layoutPartsDelimiter=#
log4j.appender.JDBC2.buffer=1
log4j.appender.JDBC2.commit=true
log4j.appender.JDBC2.quoteReplace=true
log4j.appender.JDBC2.throwableMaxChars=10000
